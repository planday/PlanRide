/* tslint:disable */
/* eslint-disable */
/**
 * PlanRide.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateTransportationOfferInputModel,
    CreateTransportationOfferInputModelFromJSON,
    CreateTransportationOfferInputModelToJSON,
    TransportationOfferDetailsViewModel,
    TransportationOfferDetailsViewModelFromJSON,
    TransportationOfferDetailsViewModelToJSON,
    TransportationOfferViewModel,
    TransportationOfferViewModelFromJSON,
    TransportationOfferViewModelToJSON,
} from '../models';

export interface CreateOfferRequest {
    createTransportationOfferInputModel?: CreateTransportationOfferInputModel;
}

export interface GetOfferDetailsRequest {
    offerId: string;
}

/**
 * 
 */
export class TransportationOffersApi extends runtime.BaseAPI {

    /**
     */
    async createOfferRaw(requestParameters: CreateOfferRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/offers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateTransportationOfferInputModelToJSON(requestParameters.createTransportationOfferInputModel),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async createOffer(requestParameters: CreateOfferRequest = {}, initOverrides?: RequestInit): Promise<void> {
        await this.createOfferRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getOfferDetailsRaw(requestParameters: GetOfferDetailsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<TransportationOfferDetailsViewModel>> {
        if (requestParameters.offerId === null || requestParameters.offerId === undefined) {
            throw new runtime.RequiredError('offerId','Required parameter requestParameters.offerId was null or undefined when calling getOfferDetails.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/offers/{offerId}`.replace(`{${"offerId"}}`, encodeURIComponent(String(requestParameters.offerId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TransportationOfferDetailsViewModelFromJSON(jsonValue));
    }

    /**
     */
    async getOfferDetails(requestParameters: GetOfferDetailsRequest, initOverrides?: RequestInit): Promise<TransportationOfferDetailsViewModel> {
        const response = await this.getOfferDetailsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getOffersRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<TransportationOfferViewModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/offers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TransportationOfferViewModelFromJSON));
    }

    /**
     */
    async getOffers(initOverrides?: RequestInit): Promise<Array<TransportationOfferViewModel>> {
        const response = await this.getOffersRaw(initOverrides);
        return await response.value();
    }

}
