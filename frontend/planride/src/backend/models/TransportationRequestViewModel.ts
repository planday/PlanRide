/* tslint:disable */
/* eslint-disable */
/**
 * PlanRide.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransportationRequestViewModel
 */
export interface TransportationRequestViewModel {
    /**
     * 
     * @type {string}
     * @memberof TransportationRequestViewModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TransportationRequestViewModel
     */
    departureCountryCode: string;
    /**
     * 
     * @type {number}
     * @memberof TransportationRequestViewModel
     */
    departureCityId: number;
    /**
     * 
     * @type {string}
     * @memberof TransportationRequestViewModel
     */
    departureCityName: string;
    /**
     * 
     * @type {number}
     * @memberof TransportationRequestViewModel
     */
    numberOfPeople: number;
    /**
     * 
     * @type {boolean}
     * @memberof TransportationRequestViewModel
     */
    havePets: boolean;
    /**
     * ISO-8601 date string
     * @type {Date}
     * @memberof TransportationRequestViewModel
     */
    departureDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransportationRequestViewModel
     */
    dateCreated: Date;
}

export function TransportationRequestViewModelFromJSON(json: any): TransportationRequestViewModel {
    return TransportationRequestViewModelFromJSONTyped(json, false);
}

export function TransportationRequestViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransportationRequestViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'departureCountryCode': json['departureCountryCode'],
        'departureCityId': json['departureCityId'],
        'departureCityName': json['departureCityName'],
        'numberOfPeople': json['numberOfPeople'],
        'havePets': json['havePets'],
        'departureDate': (new Date(json['departureDate'])),
        'dateCreated': (new Date(json['dateCreated'])),
    };
}

export function TransportationRequestViewModelToJSON(value?: TransportationRequestViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'departureCountryCode': value.departureCountryCode,
        'departureCityId': value.departureCityId,
        'departureCityName': value.departureCityName,
        'numberOfPeople': value.numberOfPeople,
        'havePets': value.havePets,
        'departureDate': (value.departureDate.toISOString().substr(0,10)),
        'dateCreated': (value.dateCreated.toISOString()),
    };
}

